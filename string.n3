#  Schema for string built-in functions in cwm. 

#@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix s: <http://www.w3.org/2000/01/rdf-schema#> .
#@prefix daml:  <http://www.daml.org/2001/03/daml-ont#> .
@prefix dpo:  <http://www.daml.org/2001/03/daml+oil#> .
@prefix log:  <http://www.w3.org/2000/10/swap/log#> .

@prefix string:  <http://www.w3.org/2000/10/swap/string#> .

string:String a s:Class;
    dpo:sameClassAs s:Literal.   # I suppose - modulo typing

# Concat is backwards!
string:concat a dpo:UnambiguousProperty;   # obj = list of string to string
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "is concatenation of";
    s:comment "(obsolete - (was backwards!) - use: string:concatenation)";
    s:domain string:String;
    s:range  dpo:List;
    dpo:inverse string:concatenation.  # Use that instead for new designs

string:concatenation a dpo:UniqueProperty;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label "is the concatenation of the strings in";
    s:comment  """The subject is a list of strings. The object is calculated as
		a concatenation of those strings.""";
    s:domain dpo:List;
    s:range  string:String.

string:greaterThan a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "is greater than";
    s:comment  """True iff the string is greater than the object
	when ordered according to Unicode(tm) code order.""";
    s:domain string:String;
    s:range  string:String.


string:notGreaterThan a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "is not greater than";
    s:comment  """True iff the string is NOT greater than the object
	when ordered according to Unicode(tm) code order.""";
    s:domain string:String;
    s:range  string:String.


string:lessThan a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "is less than";
    s:comment  """True iff the string is less than the object
	when ordered according to Unicode(tm) code order.""";
    s:domain string:String;
    s:range  string:String.


string:notLessThan a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "is not less than";
    s:comment  """True iff the string is NOT less than the object
	when ordered according to Unicode(tm) code order.""";
    s:domain string:String;
    s:range  string:String.

string:startsWith a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "starts with";
    s:comment  """True iff the subject string starts with the object string.""";
    s:domain string:String;
    s:range  string:String.

string:endsWith a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "ends with";
    s:comment  """True iff the subject string ends with the object string.""";
    s:domain string:String;
    s:range  string:String.

string:contains a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """True iff the subject string contains the object string.""";
    s:domain string:String;
    s:range  string:String.

string:containsIgnoringCase a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """True iff the subject string contains the object string,
with the comparison done ignoring the difference between upper case and
lower case characters.""";
    s:domain string:String;
    s:range  string:String.

string:equalIgnoringCase a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """True iff the subject string is the same as object string
ignoring differences between upper and lower case.""";
    s:domain string:String;
    s:range  string:String.

string:notEqualIgnoringCase a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """True iff the subject string is the NOT same as object string
ignoring differences between upper and lower case.""";
    s:domain string:String;
    s:range  string:String.

string:scrape a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """The subject is a list of two strings. The second string is
a regular expression in the perl, python style.
It must contain one group (a part in parentheses).  If the first string in the list matches
the regular expression, then the object is calculated as being the
part of the first string which matches the group.""";
    s:range  string:String.

string:matches a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """The subject is a string;
the object is is a regular expression in the perl, python style.
It is true iff the string matches the regexp.""";
    s:domain string:String;
    s:range  string:String.


string:notMatches a dpo:Property;
    s:definedBy <http://www.w3.org/2000/10/swap/string>;  
    s:label  "contains";
    s:comment  """The subject string;
the object is is a regular expression in the perl, python style.
It is true iff the string does NOT match the regexp.""";
    s:domain string:String;
    s:range  string:String.


#ends
