%!PS-Adobe-2.0
save
/DotDict 200 dict def
DotDict begin

/setupLatin1 {
mark
/EncodingVector 256 array def
 EncodingVector 0

ISOLatin1Encoding 0 255 getinterval putinterval

EncodingVector
  dup 306 /AE
  dup 301 /Aacute
  dup 302 /Acircumflex
  dup 304 /Adieresis
  dup 300 /Agrave
  dup 305 /Aring
  dup 303 /Atilde
  dup 307 /Ccedilla
  dup 311 /Eacute
  dup 312 /Ecircumflex
  dup 313 /Edieresis
  dup 310 /Egrave
  dup 315 /Iacute
  dup 316 /Icircumflex
  dup 317 /Idieresis
  dup 314 /Igrave
  dup 334 /Udieresis
  dup 335 /Yacute
  dup 376 /thorn
  dup 337 /germandbls
  dup 341 /aacute
  dup 342 /acircumflex
  dup 344 /adieresis
  dup 346 /ae
  dup 340 /agrave
  dup 345 /aring
  dup 347 /ccedilla
  dup 351 /eacute
  dup 352 /ecircumflex
  dup 353 /edieresis
  dup 350 /egrave
  dup 355 /iacute
  dup 356 /icircumflex
  dup 357 /idieresis
  dup 354 /igrave
  dup 360 /dcroat
  dup 361 /ntilde
  dup 363 /oacute
  dup 364 /ocircumflex
  dup 366 /odieresis
  dup 362 /ograve
  dup 365 /otilde
  dup 370 /oslash
  dup 372 /uacute
  dup 373 /ucircumflex
  dup 374 /udieresis
  dup 371 /ugrave
  dup 375 /yacute
  dup 377 /ydieresis  

% Set up ISO Latin 1 character encoding
/starnetISO {
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        } forall
        /Encoding EncodingVector def
        currentdict end definefont
} def
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Times-BoldItalic starnetISO def
/Helvetica starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier starnetISO def
/Courier-Oblique starnetISO def
/Courier-Bold starnetISO def
/Courier-BoldOblique starnetISO def
cleartomark
} bind def

/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def

/InvScaleFactor 1.0 def
/set_scale {
	dup 1 exch div /InvScaleFactor exch def
	dup scale
} bind def

% styles
/solid { } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def

% hooks for setting color 
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def

/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
			(\() show i str cvs show (,) show j str cvs show (\)) show
		grestore
	} if
} bind def

/set_font {
	findfont exch
	scalefont setfont
} def

% draw aligned label in bounding box aligned to current point
/alignedtext {			% width adj text
	/text exch def
	/adj exch def
	/width exch def
	gsave
		width 0 gt {
			text stringwidth pop adj mul 0 rmoveto
		} if
		[] 0 setdash
		text show
	grestore
} def

/boxprim {				% xcorner ycorner xsize ysize
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
} bind def

/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
} bind def

/endpage { showpage } bind def

/layercolorseq
	[	% layer color sequence - darkest to lightest
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	]
def

/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer get
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
} bind def

/onlayer { curlayer ne {invis} if } def

/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	or
	{invis} if
} def

/curlayer 0 def

14 default-font-family set_font
1 setmiterlimit
% /arrowlength 10 def
% /arrowwidth 5 def

% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
2 lt {
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
} if

gsave
35 35 500 207 boxprim clip newpath
36 36 translate
0 0 1 beginpage
0 0 translate 0 rotate
[ /CropBox [36 36 535 242] /PAGES pdfmark
0.000 0.000 0.000 graphcolor
14.00 /Times-Roman set_font

%	pat
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
35 99 27 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
35 94 moveto 23 -0.5 (:pat) alignedtext
end grestore
end grestore

%	bio:Human
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
215 184 49 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
215 179 moveto 76 -0.5 (bio:Human) alignedtext
end grestore
end grestore

%	pat -> bio:Human
newpath 47 115 moveto
57 126 64 131 80 141 curveto
106 155 138 166 164 173 curveto
stroke
newpath 163 170 moveto
172 175 lineto
162 175 lineto
closepath
fill
gsave 10 dict begin
114 171 moveto 54 -0.5 (rdf:type) alignedtext
end grestore

%	rover
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
215 130 18 18 ellipse_path
stroke
end grestore

%	pat -> rover
newpath 61 104 moveto
96 110 156 120 190 126 curveto
stroke
newpath 187 123 moveto
197 127 lineto
187 128 lineto
closepath
fill
gsave 10 dict begin
114 122 moveto 45 -0.5 (per:pet) alignedtext
end grestore

%	"Pat Smith"
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
newpath 476 92 moveto
390 92 lineto
390 56 lineto
476 56 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
433 69 moveto 73 -0.5 ("Pat Smith") alignedtext
end grestore
end grestore

%	pat -> "Pat Smith"
newpath 61 95 moveto
88 91 130 85 166 83 curveto
241 76 328 75 382 74 curveto
stroke
newpath 379 72 moveto
389 74 lineto
379 77 lineto
closepath
fill
gsave 10 dict begin
215 88 moveto 62 -0.5 (per:name) alignedtext
end grestore

%	"Patrick Smith"
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
newpath 490 36 moveto
376 36 lineto
376 0 lineto
490 0 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
433 13 moveto 100 -0.5 ("Patrick Smith") alignedtext
end grestore
end grestore

%	pat -> "Patrick Smith"
newpath 54 86 moveto
61 83 69 83 80 79 curveto
118 65 127 60 166 52 curveto
235 37 314 28 369 23 curveto
stroke
newpath 366 21 moveto
376 22 lineto
366 26 lineto
closepath
fill
gsave 10 dict begin
215 57 moveto 62 -0.5 (per:name) alignedtext
end grestore

%	bio:Dog
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
433 185 37 18 ellipse_path
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
433 180 moveto 52 -0.5 (bio:Dog) alignedtext
end grestore
end grestore

%	rover -> bio:Dog
newpath 232 136 moveto
251 142 277 151 282 153 curveto
318 163 359 171 389 177 curveto
stroke
newpath 389 174 moveto
398 179 lineto
388 179 lineto
closepath
fill
gsave 10 dict begin
320 175 moveto 54 -0.5 (rdf:type) alignedtext
end grestore

%	"Rover"
gsave 10 dict begin
0.000 0.000 0.827 nodecolor
newpath 466 147 moveto
400 147 lineto
400 111 lineto
466 111 lineto
closepath
stroke
gsave 10 dict begin
0.000 0.000 0.000 nodecolor
433 124 moveto 53 -0.5 ("Rover") alignedtext
end grestore
end grestore

%	rover -> "Rover"
newpath 233 130 moveto
268 130 342 130 389 129 curveto
stroke
newpath 389 127 moveto
399 129 lineto
389 132 lineto
closepath
fill
gsave 10 dict begin
320 134 moveto 62 -0.5 (per:name) alignedtext
end grestore
grestore
end
restore
