# Test whether a schema mentions the predicates used in this data
#  This involves searching in files for statements being present or absent.
 
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix s: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix daml:  <http://www.daml.org/2000/10/daml-ont#> .
@prefix dpo:  <http://www.daml.org/2001/03/daml+oil#> .
@prefix ex:   <http://www.daml.org/2000/10/daml-ex#> .
@prefix log:  <http://www.w3.org/2000/10/swap/log#> .

@prefix : <foo.n3#>.  # Local stuff

# @prefix foo: <http://www.w3.org/2000/10/swap/test/includes/foo.n3#>.  # Local stuff
@prefix foo: <foo.n3#>.  # Local stuff

# Usage:   cwm t11.n3 -think
#
# Output should conclude all test* a :success and no failures.
#


this log:forAll :d, :o, :p, :s, :S, :s1, :x, :y, :F, :G, :H.

{ <t10a.n3> log:resolvesTo :F.
  :F log:includes { :s :p :o}   } log:implies { :p a :UsedProperty } .

{ :p a :UsedProperty.
  :p log:resolvesTo :S.
  :S log:includes { :p s:isDefinedBy :s1 }} log:implies {:p :SCHEMA :s1}.

{  :p a :UsedProperty.
   :p log:resolvesTo :H.
   :H log:includes { :p a rdf:Property }
} log:impliesXX { :p a :defined_as_property_in_ns_doc1 }.

{ <foo.n3#is> log:resolvesTo :H.
  :H log:includes { :p s:isDefinedBy :x }} log:impliesXX { :p a :defined_in_schema2 .
    :p  :is_defined_in2 :x.
    :H :is :whatFooIsResolvedTo2 }.

#  The RDF and RDFS specs imply this algorithm for the definitive schema corresponding
#  to a Property :p.  (From Ralph Swick, whiteboard conversation)

{ :p a :UsedProperty .
  :p log:resolvesTo [log:includes { :p s:isDefinedBy :x }]

} log:implies {
    :p a :defined_in_schema3 .
    :p  :schema :x.
}.


# Now we can find the schema, we can check whether the property is indeed
# mentioned in the schema.
# Exactly what we require of @@@

{     :p :schema :s.
      :s log:resolvesTo [:notIncludes { :p a s:Property }].
} log:implies {
      :p a :SPELLING_MISTAKE_MAYBE.  # ;-)
}.




{ :p a :defined_in_schema.  :p a :UsedProperty } log:implies { :p a :UsedAndDefined }.

log:implies a log:Chaff.  #  Clear out rules on -purge

########################### Old stuff:

#{ :p a :UsedProperty.
#  :p log:resolvesTo :H.
# } log:impliesXX {:H a :schemaFormula }.

#{ foo:is log:resolvesTo :H.
#   :H log:includes { foo:is a rdf:Property }
#} log:implies { :H a :success1 }.

#{ foo:is log:resolvesTo :H.
#   :H log:includes { foo:is a rdf:Property }
#} log:implies { foo:is a :defined_as_prop_in_schema }.



 
#ends
