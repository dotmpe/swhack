# Test whether a schema mentions the predicates used in this data
#  This involves searching in files for statements being present or absent.
 
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix s: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix daml:  <http://www.daml.org/2000/10/daml-ont#> .
@prefix dpo:  <http://www.daml.org/2001/03/daml+oil#> .
@prefix ex:   <http://www.daml.org/2000/10/daml-ex#> .
@prefix log:  <http://www.w3.org/2000/10/swap/log#> .

@prefix : <foo.n3#>.  # Local stuff

@prefix foo: <foo.n3#>.  # Local stuff

# Usage:   cwm t11.n3 -think
#
# Output should conclude all test* a :success and no failures.
#


this log:forAll :d, :o, :p, :s, :S, :s1, :x, :y, :F, :G, :H.

{ <t10a.n3> log:resolvesTo :F.
  :F log:includes { :s :p :o}   } log:implies { :p a :UsedProperty } .

{ :p a :UsedProperty.
  :p log:resolvesTo :S.
  :S log:includes { :p s:isDefinedBy :s1 }} log:implies {:p a :ConsistentProperty}.

{ :p a :UsedProperty.
  :p log:resolvesTo :H.
 } log:implies {:H a :schemaFormula }.

{ foo:is log:resolvesTo :H.
#   :h log:includes { foo:is a rdf:Property }
} log:implies { :H a :success }.

{ <foo.n3#is> log:resolvesTo :H.
  :H log:includes { :p s:isDefinedBy :x }} log:implies { :p a :defined_in_schema.
    :H :is :whatFooIsResolvedTo }.

{ :p a :defined_in_schema.  :p a :UsedProperty } log:implies { :p a :UsedAndDefined }.


 
#ends
