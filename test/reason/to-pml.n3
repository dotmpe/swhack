# Rules to take a proof as emitted by cwm into a proof as input by InferenceWeb
#

@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix crypto: <http://www.w3.org/2000/10/swap/crypto#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .

@prefix rea: <http://www.w3.org/2000/10/swap/reason#> .
@prefix n3: <http://www.w3.org/2004/06/rei#> .
@prefix iw: <http://inferenceweb.stanford.edu/2004/07/iw.owl#> .

# A little ontology to see that we have some common understanding


# Translation rules (much could be done with OWL but we have rules)

{ ?x	a rea:Inference;
	rea:binding [
	    rea:variable  [n3:uri ?var ];
	    rea:boundTo  [ n3:uri ?val ]].

} => { ?x a iw:InferenceStep;
	    iw:hasVariableMapping [
				    # a iw:VariableMapping;
				    iw:variable  ?var; iw:term ?val ].
}.

{ ?x	rea:gives ?y.
    ?y  log:n3String ?s } => { ?x  iw:conclusion ?s }.  #  No nested RDF!

{ ?x	rea:evidence ?y } => { ?x  iw:hasAntecedent ?y }.  #@@ should be list

{ ?x a  rea:Proof } => {
	?x  iw:hasLanguage n3:N3;
	    iw:hasInferenceEngine  <http://inferenceweb.stanford.edu/registry/IE/CWM.owl#CWM>}.


{ ?x	a rea:Inference;
	rea:rule  ?RULESTEP.

#  ?RULE!log:n3String crypto:md5 ?HASH.
#  ( "mid:"  ?HASH ) string:concatenation ?URI.

} => {
  ?x	iw:hasRule ?RULESTEP
}.

########## Provenance

{  ?x a rea:Parsing; rea:source ?y } =>
    { ?x a iw:DirectAssertion; iw:source ?y }.
 