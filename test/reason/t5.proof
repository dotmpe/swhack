#Processed by Id: cwm.py,v 1.114 2002/12/30 15:00:33 timbl Exp 
        #    using base file:/devel/WWW/2000/10/swap/test/reason/foo
        
#  Notation3 generation by
#       notation3.py,v 1.126 2002/12/31 05:50:30 timbl Exp

#   Base was: file:/devel/WWW/2000/10/swap/test/reason/foo
     @prefix : <http://www.w3.org/2000/10/swap/reason#> .
     @prefix foo: <t5.n3#> .
     @prefix log: <http://www.w3.org/2000/10/swap/log#> .
     @prefix run: <.run-1041516826.629769p21358#> .
    
    this     log:forSome <#_g0> .
      [      a :Conjunction,
                    :Proof;
             :component  [
                 a :Extraction;
                 :because  [
                     a :Inference;
                     :binding  [
                         :boundTo foo:b;
                         :variable foo:y ],
                             [
                         :boundTo foo:c;
                         :variable foo:x ];
                     :evidence  [
                         a :Extraction;
                         :because <#_g0>;
                         :gives {foo:a     foo:b foo:c .
                        } ];
                     :rule  [
                         a :Extraction;
                         :because <#_g0>;
                         :gives {this     log:forAll foo:x,
                                    foo:y .
                        {
                            foo:a     foo:y foo:x .
                            
                            }     log:implies {foo:x     foo:y <c2> .
                            } .
                        } ] ];
                 :gives {foo:c     foo:b <c2> .
                } ],
                     [
                 a :Extraction;
                 :because <#_g0>;
                 :gives {foo:a     foo:b foo:c .
                } ],
                     [
                 a :Extraction;
                 :because <#_g0>;
                 :gives {this     log:forAll foo:x,
                            foo:y .
                {
                    foo:a     foo:y foo:x .
                    
                    }     log:implies {foo:x     foo:y <c2> .
                    } .
                } ];
             :gives {this     log:forAll foo:x,
                        foo:y .
            foo:a     foo:b foo:c .
            foo:c     foo:b <c2> .
            {
                foo:a     foo:y foo:x .
                
                }     log:implies {foo:x     foo:y <c2> .
                } .
            } ].
    
    <#_g0>     a :Parsing;
         :source <t5.n3> .
    
#ENDS
