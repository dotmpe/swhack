#SPARQL in Notation3
# Context Free Grammar without tokenization
#
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix cfg: <http://www.w3.org/2000/10/swap/grammar/bnf#>.
@prefix rul: <http://www.w3.org/2000/10/swap/grammar/bnf-rules#>.
@prefix : <http://www.w3.org/2000/10/swap/grammar/sparql#>.
@prefix n3: <http://www.w3.org/2000/10/swap/grammar/n3#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#>.
@keywords a, is, of.

    Query cfg:mustBeOneSequence ( 
           ( Prolog  gen0  cfg:eof  ) 
         ) . 

gen0 cfg:mustBeOneSequence ( 
           ( SelectQuery  ) 
           ( ConstructQuery  ) 
           ( DescribeQuery  ) 
           ( AskQuery  ) 
         ) . 

SelectQuery cfg:mustBeOneSequence ( 
           ( IT_SELECT  gen1  gen3  DatasetClause  WherePattern  ResultsFilter  ) 
         ) . 

gen1 cfg:mustBeOneSequence ( 
           ( ) 
           ( IT_DISTINCT  ) 
         ) . 

gen2 cfg:mustBeOneSequence ( 
           ( ) 
           ( Var gen2 ) 
         ) . 

gen3 cfg:mustBeOneSequence ( 
           ( Var gen2  ) 
           ( GT_TIMES  ) 
         ) . 

ConstructQuery cfg:mustBeOneSequence ( 
           ( IT_CONSTRUCT  ConstructTemplate  DatasetClause  WherePattern  ResultsFilter  ) 
         ) . 

DescribeQuery cfg:mustBeOneSequence ( 
           ( IT_DESCRIBE  gen5  DatasetClause  gen6  ResultsFilter  ) 
         ) . 

gen4 cfg:mustBeOneSequence ( 
           ( ) 
           ( VarOrIRIref  gen4 ) 
         ) . 

gen5 cfg:mustBeOneSequence ( 
           ( VarOrIRIref  gen4  ) 
           ( GT_TIMES  ) 
         ) . 

gen6 cfg:mustBeOneSequence ( 
           ( ) 
           ( WherePattern  ) 
         ) . 

AskQuery cfg:mustBeOneSequence ( 
           ( IT_ASK  DatasetClause  gen6  ) 
         ) . 

Prolog cfg:mustBeOneSequence ( 
           ( gen8  gen9  ) 
         ) . 

gen8 cfg:mustBeOneSequence ( 
           ( ) 
           ( BaseDecl  ) 
         ) . 

gen9 cfg:mustBeOneSequence ( 
           ( ) 
           ( PrefixDecl  gen9 ) 
         ) . 

BaseDecl cfg:mustBeOneSequence ( 
           ( IT_BASE  QuotedIRIref  ) 
         ) . 

PrefixDecl cfg:mustBeOneSequence ( 
           ( IT_PREFIX  QNAME_NS  QuotedIRIref  ) 
         ) . 

DatasetClause cfg:mustBeOneSequence ( 
           ( gen10  gen11  ) 
         ) . 

gen10 cfg:mustBeOneSequence ( 
           ( ) 
           ( DefaultGraphClause  ) 
         ) . 

gen11 cfg:mustBeOneSequence ( 
           ( ) 
           ( NamedGraphClause  gen11 ) 
         ) . 

DefaultGraphClause cfg:mustBeOneSequence ( 
           ( IT_FROM  SourceSelector  ) 
         ) . 

NamedGraphClause cfg:mustBeOneSequence ( 
           ( FROM_NAMED  SourceSelector  ) 
         ) . 

SourceSelector cfg:mustBeOneSequence ( 
           ( IRIref  ) 
         ) . 

WherePattern cfg:mustBeOneSequence ( 
           ( gen12  gen13  ) 
         ) . 

gen12 cfg:mustBeOneSequence ( 
           ( ) 
           ( IT_WHERE  ) 
         ) . 

gen13 cfg:mustBeOneSequence ( 
           ( EmptyPattern  ) 
           ( GraphPattern  ) 
         ) . 

GraphPattern cfg:mustBeOneSequence ( 
           ( OpenCurly  Union  CloseCurly  ) 
         ) . 

ConstructTemplate cfg:mustBeOneSequence ( 
           ( OpenCurly  SubjectStatements  gen14  CloseCurly  ) 
         ) . 

gen15 cfg:mustBeOneSequence ( 
           ( Dot  SubjectStatements  ) 
         ) . 

gen14 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen15  gen14  ) 
         ) . 

ResultsFilter cfg:mustBeOneSequence ( 
           ( gen16  gen17  gen18  ) 
         ) . 

gen16 cfg:mustBeOneSequence ( 
           ( ) 
           ( OrderClause  ) 
         ) . 

gen17 cfg:mustBeOneSequence ( 
           ( ) 
           ( LimitClause  ) 
         ) . 

gen18 cfg:mustBeOneSequence ( 
           ( ) 
           ( OffsetClause  ) 
         ) . 

OrderClause cfg:mustBeOneSequence ( 
           ( IT_ORDER  IT_BY  OrderCondition  gen19  ) 
         ) . 

gen19 cfg:mustBeOneSequence ( 
           (  ) 
           ( OrderCondition  gen19  ) 
         ) . 

OrderCondition cfg:mustBeOneSequence ( 
           ( gen20  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( FunctionCall  ) 
           ( Var  ) 
           ( GT_LPAREN  Expression  GT_RPAREN  ) 
         ) . 

gen20 cfg:mustBeOneSequence ( 
           ( IT_ASC  ) 
           ( IT_DESC  ) 
         ) . 

LimitClause cfg:mustBeOneSequence ( 
           ( IT_LIMIT  INTEGER  ) 
         ) . 

OffsetClause cfg:mustBeOneSequence ( 
           ( IT_OFFSET  INTEGER  ) 
         ) . 

Union cfg:mustBeOneSequence ( 
           ( Pattern  IT_UNION  Union  ) 
           ( Pattern  ) 
         ) . 

Optional cfg:mustBeOneSequence ( 
           ( IT_OPTIONAL  PatternElts  ) 
         ) . 

GraphConstraint cfg:mustBeOneSequence ( 
           ( IT_GRAPH  VarOrBlankNodeOrIRIref  PatternElts  ) 
         ) . 

PatternElts cfg:mustBeOneSequence ( 
           ( NonSubjectPatternStarters  ) 
           ( Filter  ) 
         ) . 

Pattern cfg:mustBeOneSequence ( 
           ( SubjectStatements  AfterSubjectStatements  ) 
           ( NonSubjectPatternElts  AfterNotSubject  ) 
         ) . 

AfterSubjectStatements cfg:mustBeOneSequence ( 
           ( Dot  SubjectStatements  AfterSubjectStatements  ) 
           ( gen21  NonSubjectPatternElts  AfterNotSubject  ) 
           ( ) 
         ) . 

gen21 cfg:mustBeOneSequence ( 
           ( ) 
           ( OptDot  ) 
         ) . 

AfterNotSubject cfg:mustBeOneSequence ( 
           ( gen22  SubjectStatements  AfterSubjectStatements  ) 
           ( gen21  NonSubjectPatternElts  AfterNotSubject  ) 
           ( ) 
         ) . 

gen22 cfg:mustBeOneSequence ( 
           ( ) 
           ( Dot  ) 
         ) . 

NonSubjectPatternStarters cfg:mustBeOneSequence ( 
           ( Optional  ) 
           ( GraphConstraint  ) 
           ( GraphPattern  ) 
         ) . 

NonSubjectPatternElts cfg:mustBeOneSequence ( 
           ( NonSubjectPatternStarters  ) 
           ( Filter  ) 
         ) . 

Filter cfg:mustBeOneSequence ( 
           ( IT_FILTER  gen24  ) 
         ) . 

gen24 cfg:mustBeOneSequence ( 
           ( GT_LPAREN  Expression  GT_RPAREN  ) 
           ( BuiltIns  ) 
         ) . 

SubjectStatements cfg:mustBeOneSequence ( 
           ( Subject  gen25  ) 
         ) . 

gen25 cfg:mustBeOneSequence ( 
           ( ) 
           ( PredicateObjectList  ) 
         ) . 

PredicateObjectList cfg:mustBeOneSequence ( 
           ( Predicate  ObjectList  gen26  ) 
         ) . 

gen27 cfg:mustBeOneSequence ( 
           ( GT_SEMI  Predicate  ObjectList  ) 
         ) . 

gen26 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen27  gen26  ) 
         ) . 

ObjectList cfg:mustBeOneSequence ( 
           ( Object  gen28  ) 
         ) . 

gen29 cfg:mustBeOneSequence ( 
           ( GT_COMMA  Object  ) 
         ) . 

gen28 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen29  gen28  ) 
         ) . 

Subject cfg:mustBeOneSequence ( 
           ( GraphNode  ) 
         ) . 

Predicate cfg:mustBeOneSequence ( 
           ( VarOrBlankNodeOrIRIref  ) 
           ( IT_a  ) 
         ) . 

Object cfg:mustBeOneSequence ( 
           ( VarOrTerm  ) 
           ( TriplesNode  ) 
         ) . 

TriplesNode cfg:mustBeOneSequence ( 
           ( Collection  ) 
           ( BlankNodePropertyList  ) 
         ) . 

BlankNodePropertyList cfg:mustBeOneSequence ( 
           ( OpenSquare  PredicateObjectList  CloseSquare  ) 
         ) . 

Collection cfg:mustBeOneSequence ( 
           ( GT_LPAREN  GraphNode  gen30  GT_RPAREN  ) 
         ) . 

gen30 cfg:mustBeOneSequence ( 
           ( ) 
           ( GraphNode  gen30  ) 
         ) . 

GraphNode cfg:mustBeOneSequence ( 
           ( VarOrTerm  ) 
           ( TriplesNode  ) 
         ) . 

VarOrTerm cfg:mustBeOneSequence ( 
           ( Var  ) 
           ( GraphTerm  ) 
         ) . 

VarOrIRIref cfg:mustBeOneSequence ( 
           ( Var  ) 
           ( IRIref  ) 
         ) . 

VarOrBlankNodeOrIRIref cfg:mustBeOneSequence ( 
           ( Var  ) 
           ( BlankNode  ) 
           ( IRIref  ) 
         ) . 

Var cfg:mustBeOneSequence ( 
           ( VAR1  ) 
           ( VAR2  ) 
         ) . 

GraphTerm cfg:mustBeOneSequence ( 
           ( RDFTerm  ) 
           ( GT_LPAREN  GT_RPAREN  ) 
         ) . 

Expression cfg:mustBeOneSequence ( 
           ( ConditionalOrExpression  ) 
         ) . 

ConditionalOrExpression cfg:mustBeOneSequence ( 
           ( ConditionalAndExpression  gen31  ) 
         ) . 

gen32 cfg:mustBeOneSequence ( 
           ( GT_OR  ConditionalAndExpression  ) 
         ) . 

gen31 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen32  gen31  ) 
         ) . 

ConditionalAndExpression cfg:mustBeOneSequence ( 
           ( ValueLogical  gen33  ) 
         ) . 

gen34 cfg:mustBeOneSequence ( 
           ( GT_AND  ValueLogical  ) 
         ) . 

gen33 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen34  gen33  ) 
         ) . 

ValueLogical cfg:mustBeOneSequence ( 
           ( RelationalExpression  ) 
         ) . 

RelationalExpression cfg:mustBeOneSequence ( 
           ( NumericExpression  gen35  ) 
         ) . 

gen36 cfg:mustBeOneSequence ( 
           ( GT_EQUAL  NumericExpression  ) 
           ( GT_NEQUAL  NumericExpression  ) 
           ( GT_LT  NumericExpression  ) 
           ( GT_GT  NumericExpression  ) 
           ( GT_LE  NumericExpression  ) 
           ( GT_GE  NumericExpression  ) 
         ) . 

gen35 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen36  ) 
         ) . 

NumericExpression cfg:mustBeOneSequence ( 
           ( AdditiveExpression  ) 
         ) . 

AdditiveExpression cfg:mustBeOneSequence ( 
           ( MultiplicativeExpression  gen37  ) 
         ) . 

gen38 cfg:mustBeOneSequence ( 
           ( GT_PLUS  MultiplicativeExpression  ) 
           ( GT_MINUS  MultiplicativeExpression  ) 
         ) . 

gen37 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen38  gen37  ) 
         ) . 

MultiplicativeExpression cfg:mustBeOneSequence ( 
           ( UnaryExpression  gen39  ) 
         ) . 

gen40 cfg:mustBeOneSequence ( 
           ( GT_TIMES  UnaryExpression  ) 
           ( GT_DIVIDE  UnaryExpression  ) 
         ) . 

gen39 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen40  gen39  ) 
         ) . 

UnaryExpression cfg:mustBeOneSequence ( 
           ( GT_NOT  CallExpression  ) 
           ( GT_PLUS  CallExpression  ) 
           ( GT_MINUS  CallExpression  ) 
           ( CallExpression  ) 
         ) . 

CallExpression cfg:mustBeOneSequence ( 
           ( BuiltIns  ) 
           ( PrimaryExpression  ) 
         ) . 

BuiltIns cfg:mustBeOneSequence ( 
           ( IT_STR  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( IT_LANG  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( IT_DATATYPE  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( IT_REGEX  GT_LPAREN  Expression  GT_COMMA  String  gen41  GT_RPAREN  ) 
           ( IT_BOUND  GT_LPAREN  Var  GT_RPAREN  ) 
           ( IT_isURI  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( IT_isBLANK  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( IT_isLITERAL  GT_LPAREN  Expression  GT_RPAREN  ) 
           ( FunctionCall  ) 
         ) . 

gen42 cfg:mustBeOneSequence ( 
           ( GT_COMMA  String  ) 
         ) . 

gen41 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen42  ) 
         ) . 

PrimaryExpression cfg:mustBeOneSequence ( 
           ( gen43  ) 
         ) . 

gen43 cfg:mustBeOneSequence ( 
           ( Var  ) 
           ( RDFTerm  ) 
           ( GT_LPAREN  Expression  GT_RPAREN  ) 
         ) . 

FunctionCall cfg:mustBeOneSequence ( 
           ( IRIref  ArgList  ) 
         ) . 

ArgList cfg:mustBeOneSequence ( 
           ( GT_LPAREN  gen44  GT_RPAREN  ) 
         ) . 

gen46 cfg:mustBeOneSequence ( 
           ( GT_COMMA  Expression  ) 
         ) . 

gen45 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen46  gen45  ) 
         ) . 

gen47 cfg:mustBeOneSequence ( 
           ( Expression  gen45  ) 
         ) . 

gen44 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen47  ) 
         ) . 

RDFTerm cfg:mustBeOneSequence ( 
           ( IRIref  ) 
           ( RDFLiteral  ) 
           ( NumericLiteral  ) 
           ( BooleanLiteral  ) 
           ( BlankNode  ) 
         ) . 

NumericLiteral cfg:mustBeOneSequence ( 
           ( INTEGER  ) 
           ( FLOATING_POINT  ) 
         ) . 

RDFLiteral cfg:mustBeOneSequence ( 
           ( String  gen48  ) 
         ) . 

gen49 cfg:mustBeOneSequence ( 
           ( GT_DTYPE  IRIref  ) 
         ) . 

gen50 cfg:mustBeOneSequence ( 
           ( LANGTAG  ) 
           ( gen49  ) 
         ) . 

gen48 cfg:mustBeOneSequence ( 
           ( ) 
           ( gen50  ) 
         ) . 

BooleanLiteral cfg:mustBeOneSequence ( 
           ( IT_true  ) 
           ( IT_false  ) 
         ) . 

String cfg:mustBeOneSequence ( 
           ( STRING_LITERAL1  ) 
           ( STRING_LITERAL2  ) 
           ( STRING_LITERAL_LONG1  ) 
           ( STRING_LITERAL_LONG2  ) 
         ) . 

IRIref cfg:mustBeOneSequence ( 
           ( QuotedIRIref  ) 
           ( QName  ) 
         ) . 

QName cfg:mustBeOneSequence ( 
           ( QNAME  ) 
           ( QNAME_NS  ) 
         ) . 

BlankNode cfg:mustBeOneSequence ( 
           ( BNODE_LABEL  ) 
           ( OpenSquare  CloseSquare  ) 
         ) . 


#____________________________________________________

#  Axioms reducing the shortcut CFG terms to cfg:musBeOneSequence.

{ ?x cfg:zeroOrMore ?y } => {?x cfg:mustBeOneSequence ( () (?y ?x) ) }.

