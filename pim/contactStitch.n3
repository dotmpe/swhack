@prefix dc: <http://purl.org/dc/elements/1.1/> .


<> dc:title	"Mappings between contact information vocabularies";


dc:description """
 Contact, FOAF, vCard and LDIF vocabularies all cover contact information 
 for people.  Here we express some mappings.
 .
""",
"$Id$".




@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix o2:  <http://www.w3.org/2007/ont/o2#>.   # Just for 'chain' missing from owl

@prefix wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix v: <http://www.w3.org/2006/vcard/ns#>.
@prefix foaf: foaf:.
@prefix con: <http://www.w3.org/2000/10/swap/pim/contact#> .
@prefix ldif: <http://www.w3.org/2007/ont/ldif#>.
@prefix link: <http://www.w3.org/2006/link#>.
@prefix doc:  <http://www.w3.org/2000/10/swap/pim/doc#> .

    v:bday     owl:equivalentProperty con:birthday.  # yes

    v:email     owl:equivalentProperty con:mbox,   # @@HH Assume these all use <mailto:x> and not "x"? 
                foaf:mbox .	 # foaf:mbox = con:mailbox
    
    v:fax     rdfs:subPropertyOf foaf:mbox;
         owl:equivalentProperty con:fax .
    
    v:homeTel     rdfs:subPropertyOf con:phone,
                foaf:phone .
    
    v:key     owl:equivalentProperty <http://xmlns.com/wot/0.1/pubkeyAddress> .  # Address or value? @@HH
    
    v:latitude     owl:equivalentProperty wgs:lat .
    
    v:locality     owl:equivalentProperty con:city . #yes
    
    v:logo     owl:equivalentProperty foaf:logo .
    
    v:longitude     owl:equivalentProperty wgs:long .
    
    v:mobileEmail     rdfs:subPropertyOf con:emailAddress,  # @@HH No, con:mailbox
                foaf:mbox .   
    
    v:n     owl:equivalentProperty foaf:name .   # @@HH No, -- N is structured thing, name  is a srtring.
    
    v:nickname     rdfs:subPropertyOf con:knownAs;    #  @@HH No, knownAs means   v:commonName. 
         owl:equivalentProperty foaf:nick .
    
    v:photo     rdfs:subPropertyOf foaf:img .
    
    v:tel     owl:equivalentProperty con:phone,
                foaf:phone .
    
    v:title     owl:equivalentProperty con:personalTitle,
                foaf:title .
    
    v:unlabelledAdr     rdfs:subPropertyOf con:address .   # = ?  Do you mean' can't have a label' or 'no label known'?
    
    v:unlabelledEmail     rdfs:subPropertyOf con:emailAddress,  # = ?  Do you mean' can't have a label' or 'no label known'?
                foaf:mbox .
    
#    v:unlabelledTel     rdfs:subPropertyOf vca:phone,   # @@@ ????  vca:?
#                con:phone .
    
    v:url     owl:equivalentProperty con:homepage,
                foaf:homePage .
    
    v:workAdr     rdfs:subPropertyOf con:address .
    
    v:workEmail     rdfs:subPropertyOf con:emailAddress,
                foaf:mbox .
    
    v:workTel     rdfs:subClassOf foaf:phone;
         rdfs:subPropertyOf con:phone .
 
    # End f HH's table   
 ######################################################################################################### End of HH Table





# The N3 file takes the from of a line from an example data file in comments,
# followed by the crosss-definition with the contact vocabulary    
    
 
 #  Going through LDIF:

        # ldif:dn "cn=Zackery Zephyr,mail=zac@example.com"; 
#	ldif:dn = v:n.  # Not used explicitly in contact
#  No - have to generate with rule I think    -- or just with python format conv
	
        # a ldif:Person; 
	ldif:Person = con:Person.
	
#        a ldif:OrganizationalPerson; 
#        a ldif:InetOrgPerson; 
#        a ldif:MozillaAbPersonAlpha; 


#  NAMES


#        foaf:name "Zackery Zephyr"; 

    ldif:cn = foaf:name, v:fn, contact:knownAs.  # An atual usable name string

    v:fn     owl:equivalentProperty foaf:fullName.
    

#        ldif:givenName "Zackery"; 

    con:givenName  owl:equivalentProperty v:given-name, ldif:givenName .  # USe FOAF? Not yet set
    con:givenName  owl:equivalentProperty con:firstName.   # @@@ Western assumption only
#                foaf:givenname .
    
    v:family-name     owl:equivalentProperty
    
    #  con:lastName,                                             # No - order is cultural
                foaf:family_name,
                foaf:surname .
    

    v:honorific-prefix    owl:equivalentProperty con:personalTitle,
                foaf:title .
    
       v:honorific-suffix     owl:equivalentProperty con:personalSuffix .  # This
    


#        ldif:sn "Zephyr"; 
 con:familyName  owl:equivalentProperty  ldif:sn, v:family-name.
	
	
#        ldif:mozillaNickname "testnick"; 
	ldif:mozillaNickname = foaf:nick.


########### Email, accounts etc





	ldif:email = foaf:mailbox.  # @@@ Assumption ofIFP
#	ldif:email @@
#        ldif:mozillaSecondEmail "zackery@example.org "; 

#        ldif:nsAIMid "zaco"; 

	 v:x-aim = ldif:nsAIMid.

#        ldif:mozillaUseHtmlMail "false";    @@ No analog

#        ldif:telephoneNumber "+1 202 250 2525";     @@@@ reformat as URI


#  Fixed ldif vocab and conversion to use tel: and mailto:
 
	ldif:telephoneNumber = v:work-tel;
	    o2:chain (con:work con:phone).
	
#        ldif:homePhone <tel:+1-202-250-2526>; 

	ldif:homePhone o2:chain(con:home con:phone). 
	ldif:homePhone = v:home-tel.

# The following are all assumed "work" by Mozilla
	
#	ldif:telephoneNumber    formatted as URI
	ldif:telephoneNumber o2:chain (con:work con:phone).


#        ldif:fax "+1 202 250 2527";      @@ work-tel <...> a vc:Fax
	ldif:fax rdfs:range con:Fax; rdfs:subpropertyOf con:phone.
	
#        ldif:pager "+1 202 555 2525"; 
	ldif:page rdfs:range con:Pager; rdfs:subpropertyOf con:phone.

#        ldif:mobile "+1 202 555 2526"; 
	ldif:mobile rdfs:range con:MobilePhone; rdfs:subpropertyOf con:phone.


######### Addresses



# Classes    

    v:Address     = con:Address .  # yes
    
#    v:Location     = con:Location .  # @@HH Don't think so. con:Location is contact point, home or work or mobile. @@TBL should rename
    
    
#   v:adr     rdfs:subPropertyOf con:address .  # No. Diff domain. (person, contact point)
    


#    v:post-office-box     rdfs:subPropertyOf con:_addressProperty . # @@ no equiv
    
    v:region     owl:equivalentProperty con:stateOrProvince.  
    
    v:street-address     owl:equivalentProperty con:street.

    v:extended-address owl:equivalentProperty con:street2. 

    con:postalCode  owl:equivalentProperty v:postal-code.    
    
    v:country-name     owl:equivalentProperty con:country. 
    
#### Home-specific

    v:home-adr o2:chain(con:home con:address).

    v:homeAdr     rdfs:subPropertyOf con:address .
    
    

#        ldif:homeStreet "1 Zephyr Drive"; 
	ldif:homeStreet o2:chain (con:home con:address con:street).
	
#        ldif:mozillaHomeStreet2 "Apt 26"; 
	ldif:mozillaHomeStreet2 o2:chain (con:home con:address con:street2).
	
#        ldif:mozillaHomeLocalityName "Zoaloc"; 
	ldif:mozillaHomeLocalityName o2:chain (con:home con:address con:city).
	
#        ldif:mozillaHomeState "MA"; 
	ldif:mozillaHomeState o2:chain (con:home con:address con:stateOrProvince).

#        ldif:mozillaHomePostalCode "02999"; 
    
    ldif:mozillaHomePostalCode o2:chain (con:home con:address con:postalCode).

#        ldif:mozillaHomeCountryName "USA"; 
    ldif:mozillaHomeCountryName o2:chain (con:home con:address con:country).

#### Work

    v:work-adr o2:chain(con:work con:address).

#        ldif:street "1 Enterprise Way"; 
    ldif:street o2:chain (con:work con:address con:street).
    
#        ldif:mozillaWorkStreet2 "Suite 260"; 
    ldif:mozillaWorkStreet2 o2:chain (con:work con:address con:street2).

#        ldif:l "Zoaloc Heights"; 
    ldif: o2:chain (con:work con:address con:city).

#        ldif:st "MA"; 
    ldif:st o2:chain (con:work con:address con:stateOrProvince).

#        ldif:postalCode "02998"; 
	ldif:postalCode owl:equivalentProperty con:postalCode.

    ldif:postalCode o2:chain (con:work con:address con:postalCode).

#        ldif:c "USA"; 
    ldif:c o2:chain (con:work con:address con:country).
    con:country owl:equivalentProperty v:country-name.

########  Title and Organization

#        ldif:title "Chief Test dataset"; 
    ldif:title = con:title.  # @@ really?

#        ldif:department "Testing"; 

	 ldif:department = con:departmentName.
	 
    v:org     owl:equivalentProperty foaf:organization, con:organization .
    
    v:organization-name     rdfs:subPropertyOf foaf:name .
    

	 
#        ldif:company "Zacme Widgets"; 
    ldif:company o2:chain (con:organization foaf:name).

#        ldif:mozillaWorkUrl "http://example.com/test/zac";
    ldif:mozillaWorkUrl o2:chain(con:work foaf:homePage).
 
#        ldif:mozillaHomeUrl "http://zac.example.net/zac"; 



#        ldif:mozillaCustom1 "custom1 value"; 
#        ldif:mozillaCustom2 "custom2 value"; 
#        ldif:mozillaCustom3 "custom3 value"; 
#        ldif:mozillaCustom4 "custom4 value"; 


#        ldif:description "This is an imaginary person "
    ldif:description = con:description, v:note.
    
